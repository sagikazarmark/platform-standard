version: '2'

services:
    data:
        image: debian:jessie
        volumes:
            - .:/app
        tty: true

    db:
        image: mysql:latest
        volumes:
            - ./var/docker/dev/mysql:/var/lib/mysql
        environment:
            MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
            MYSQL_ROOT_PASSWORD: ''
            MYSQL_DATABASE: symfony
            MYSQL_USER: symfony
            MYSQL_PASSWORD: symfony

    app:
        build: etc/docker/dev/app
        volumes_from:
            - data
        links:
            - db
            - blackfire
        environment:
            HISTFILE: /app/var/docker/dev/.bash_history
            XDG_CONFIG_HOME: /app/var/docker/dev/.config # Required for PsySH
            COMPOSER_HOME: /app/var/docker/dev/composer
        mem_limit: 2000000000

    web:
        build: etc/docker/dev/web
        ports:
            - 80
        links:
            - app
        volumes_from:
            - data
        volumes:
            - ./var/docker/dev/nginx:/var/log/nginx

    app_debug:
        build:
            context: etc/docker/dev/app
            args:
               USE_XDEBUG: "yes"
        volumes_from:
            - data
        links:
            - db
            - blackfire
        environment:
            HISTFILE: /app/var/docker/dev/.bash_history
            XDG_CONFIG_HOME: /app/var/docker/dev/.config # Required for PsySH
            COMPOSER_HOME: /app/var/docker/dev/composer
        mem_limit: 2000000000

    web_debug:
        build: etc/docker/dev/web
        ports:
            - 80
        links:
            - app_debug:app
        volumes_from:
            - data
        volumes:
            - ./var/docker/dev/nginx:/var/log/nginx

    # Set your blackfire IDs and tokens as environment variables
    # on your system before building the containers.
    # You can find your IDs and tokens in your account profile
    # https://blackfire.io/account or on the blackfire docker
    # integration page: https://blackfire.io/docs/integrations/docker
    blackfire:
        image: blackfire/blackfire
        environment:
            BLACKFIRE_CLIENT_ID: ${BLACKFIRE_CLIENT_ID}
            BLACKFIRE_CLIENT_TOKEN: ${BLACKFIRE_CLIENT_TOKEN}
            BLACKFIRE_SERVER_ID: ${BLACKFIRE_SERVER_ID}
            BLACKFIRE_SERVER_TOKEN: ${BLACKFIRE_SERVER_TOKEN}

    elasticsearch:
        image: elasticsearch
        command: elasticsearch -Des.network.host=0.0.0.0
        expose:
            - 9200

    kibana:
        image: kibana
        ports:
            - 5601
        environment:
            - ELASTICSEARCH_URL=http://elasticsearch:9200
        links:
            - elasticsearch

    logstash:
        build: etc/docker/dev/logstash
        command: logstash -f /etc/logstash/logstash.conf
        links:
            - elasticsearch
        volumes_from:
            - data
            - web
